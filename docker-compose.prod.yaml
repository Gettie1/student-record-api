services:
  students-records_db:
    image: postgres:15-alpine
    container_name: students-records_db-prod
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-@getrude123}
      POSTGRES_DB: ${DB_NAME:-students-records_db}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - pgdata-prod:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:8.0-alpine
    container_name: redis-cache-prod
    restart: unless-stopped
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-@getrude123}
    command: sh -c "redis-server --requirepass \"$REDIS_PASSWORD\""

    ports:
      - "6379:6379"
    volumes:
      - redis_data-prod:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a \"$REDIS_PASSWORD\" ping"]
      interval: 10s
      timeout: 5s  
      retries: 5  
  nestjs-app-prod:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nestjs-app-prod
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DB_HOST=students-records_db
      - DB_PORT=5432
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-@getrude123}
      - DB_NAME=${DB_NAME:-students-records_db}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-@getrude123}
      - REDIS_URL=redis://default:${REDIS_PASSWORD:-@getrude123}@redis:6379
    ports:
      - "4510:8000"
    depends_on:
      students-records_db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  pgdata-prod:
    name: students-records_db_data_prod
    driver: local
  redis_data-prod:
    name: students_redis_data_prod
    driver: local 
  app_logs_prod:
    name: app_logs_prod
    driver: local
networks:
  app-network:
    driver: bridge