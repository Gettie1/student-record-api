@url=http://localhost:8000/api/v1

### HTTP server configuration
####################################
#         AUTHENTICATION 
####################################
@accessToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjMsImVtYWlsIjoiakBnbWFpbC5jb20iLCJpYXQiOjE3NDkzOTI2ODIsImV4cCI6MTc0OTM5MzU4Mn0.QWeRlp14UC4QK-9wN47VCarReuNr3jvuNyeHWQ8SJPs

@refreshToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjMsImVtYWlsIjoiakBnbWFpbC5jb20iLCJpYXQiOjE3NDkzOTI2ODIsImV4cCI6MTc0OTk5NzQ4Mn0.q0zkHB9ETxBunnGnAWpvs4JYwBvmkw1v7f8doe0bBEs

### SignIn new profiles
### SignIn an admin
POST {{url}}/auth/signin
Content-Type: application/json

{
 "email": "admin@school.com",
 "password": "admin123"
}

### sign in a student
POST {{url}}/auth/signin
Content-Type: application/json

{
 "email": "student@school.com",
 "password": "student123"
}

### SignIn a guest
POST {{url}}/auth/signin
Content-Type: application/json

{
 "email": "guest@gmail.com",
 "password": "guest123"
}

### SignOut a new user
GET {{url}}/auth/signout/1
### Refesh token
GET {{url}}/auth/refreshTokens?id=3
Authorization: Bearer {{refreshToken}}

##############################
###     AUTHORIZATION
##############################
### store access token
@student_token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsImVtYWlsIjoic3R1ZGVudEBzY2hvb2wuY29tIiwicm9sZSI6InN0dWRlbnQiLCJpYXQiOjE3NDk3MTg0MDcsImV4cCI6MTc0OTcxOTMwN30.P0jca9jLQhAFfwuV3EqkjPes3A492Ncv20DWg3Ma9TI
@admin_token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjIsImVtYWlsIjoiYWRtaW5Ac2Nob29sLmNvbSIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTc0OTcyMjgwOCwiZXhwIjoxNzQ5NzIzNzA4fQ.IQQ_RWwwz6tS-fZSzZEfh7njsEQb9TJMBG4146FGJfw
@guest_token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjksImVtYWlsIjoiZ3Vlc3RAc2Nob29sLmNvbSIsInJvbGUiOiJndWVzdCIsImlhdCI6MTc0OTQ4NDUxNiwiZXhwIjoxNzQ5NDg1NDE2fQ.WFMSbP_2W-LTdsZGpiZvYUY9bv-ERJg4ASg5yf0ZkQY
###############################
#### CREATE PROFILES 
###############################

### Create student profile
POST {{url}}/profiles
Content-Type: application/json

{
 "firstName": "Student",
 "lastName": "Doe",
 "email": "student@school.com",
  "password": "student123",
  "role": "student"
}

### Create admin profile
POST {{url}}/profiles
Content-Type: application/json

{
 "firstName": "Admin",
 "lastName": "Doe",
 "email": "admin@school.com",
  "password": "admin123",
  "role": "admin"
}

### Create guest profile

POST {{url}}/profiles
Content-Type: application/json

{
 "firstName": "Guest",
 "lastName": "Doe",
 "email": "guest@school.com",
  "password": "guest123",
  "role": "guest"
}


#### get profiles by student token
GET {{url}}/profiles
Authorization: Bearer {{admin_token}}

### find one profile by student token
GET {{url}}/profiles/1
Authorization: Bearer {{student_token}}

### update profile by student token
PATCH {{url}}/profiles/8
Content-Type: application/json
Authorization: Bearer {{student_token}}

{
 "firstName": "Admin",
 "lastName": "Doe",
 "email": "Admin@student.com",
 "password": "Admin123",
  "role": "admin"
}

### delete profile by student token
DELETE {{url}}/profiles/8
Authorization: Bearer {{student_token}}

#####################################
### get all profiles by admin token
#####################################
GET {{url}}/profiles
Authorization: Bearer {{admin_token}}

### find one profile by admin token
GET {{url}}/profiles/7
Authorization: Bearer {{admin_token}}

### update profile by admin token
PATCH {{url}}/profiles/10
Content-Type: application/json
Authorization: Bearer {{admin_token}}

{
 "firstName": "Admin",
 "lastName": "Doe",
 "email": "doe@school.com",
 "password": "admin123",
  "role": "admin"
}

### delete profile by admin token
DELETE {{url}}/profiles/7
Authorization: Bearer {{admin_token}}

#####################################
### get all profiles by guest token
GET {{url}}/profiles
Authorization: Bearer {{guest_token}}

### find one profile by guest token
GET {{url}}/profiles/10
Authorization: Bearer {{guest_token}}

### update profile by guest token
PATCH {{url}}/profiles/9
Content-Type: application/json
Authorization: Bearer {{guest_token}}

{
 "firstName": "Guest",
 "lastName": "Doe",
 "email": "g@school.com",
 "password": "guest123",
  "role": "guest"
}

### delete profile by guest token
DELETE {{url}}/profiles/9
Authorization: Bearer {{guest_token}}

#############################################
##Getting All students using student token
GET {{url}}/students
Authorization: Bearer {{student_token}}

### Creating a new student using student token
POST {{url}}/students
Content-Type: application/json
Authorization: Bearer {{student_token}}

{
 "firstName": "John",
 "lastName": "Doe",
 "email": "john@gmail.com",
  "dateOfBirth": "2000-01-01",
 "gender":"female",
 "phoneNumber": "123-456-7890",
 "address": "123 Main St, Anytown, USA",
 "country": "USA",
 "state": "California",
 "city": "Los Angeles",
 "enrollmentDate": "2023-09-01",
 "status": "active",
 "profilePicture": "http://example.com/profile.jpg",
 "profileId": "1"
}

### Getting a student by ID using student token
GET {{url}}/students/1/courses
Authorization: Bearer {{student_token}}

### Getting students by course using student token
GET {{url}}/students/1/course-enrollments
Authorization: Bearer {{student_token}}

### Getting students by profile using student token
GET {{url}}/students/1/profiles
Authorization: Bearer {{student_token}}

#####################################
###        STUDENTS 
#####################################

### Get All Students
GET {{url}}/students
Authorization: Bearer {{admin_token}}

### Create a new student
POST {{url}}/students
Content-Type: application/json
Authorization: Bearer {{accessToken}}

{
 "firstName": "Joel",
 "lastName": "Doe",
 "email": "joel@gmail.com",
 "dateOfBirth": "2000-01-01",
 "gender":"female",
 "phoneNumber": "123-456-7890",
 "address": "123 Main St, Anytown, USA",
 "country": "USA",
 "state": "California",
 "city": "Los Angeles",
 "enrollmentDate": "2023-09-01",
 "status": "active",
 "profilePicture": "http://example.com/profile.jpg",
 "profileId": "1"
}

### Get a student by ID
GET {{url}}/students/1/registrations
Authorization: Bearer {{accessToken}}

###Get students by course
GET {{url}}/students/1/course-enrollments

### GET students by course
GET {{url}}/students/1/courses
Authorization: Bearer {{accessToken}}

### get students by profile
GET {{url}}/students/1/profiles
Authorization: Bearer {{accessToken}}

### Update a student
PUT {{url}}/students/1
Content-Type: application/json
Authorization: Bearer {{accessToken}}

{
 "firstName": "Janet",
 "lastName": "Smith",
 "email": "julian@gmail.com",
 "dateOfBirth": "2000-01-11"
}

### Delete a student
DELETE {{url}}/students/5
Authorization: Bearer {{accessToken}}

##################################
###         SEEDING DATA 
###################################

### Seed the database with initial data
POST {{url}}/seed-data
Content-Type: application/json

{
 "seedType": "initial"
}

#########################
### COURSE ENROLLMENTS 
#########################

### Get all course enrollments
GET {{url}}/course-enrollments
Authorization: Bearer {{accessToken}}

### Create a new course enrollment
POST {{url}}/course-enrollments
Content-Type: application/json
Authorization: Bearer {{accessToken}}

{
 "id": 1,
 "course_id": "1",
 "enroll_date": "2023-09-01",
 "grade": "A",
 "status": "active"
}

### Get course enrollment by ID
GET {{url}}/course-enrollments/3

### update a course enrollment
PATCH {{url}}/course-enrollments/2

Content-Type: application/json

{
 "grade": "B+",
 "status": "completed"
}

### Delete a course enrollment
DELETE {{url}}/course-enrollments/2

#############################
###       PROFILES 
#############################

### Get all profiles  
GET {{url}}/profiles
Authorization: Bearer {{accessToken}}

### Create a new profile
POST {{url}}/profiles
Content-Type: application/json

{
 "firstName": "Getrude",
 "lastName": "Doe",
  "email": "getrude@school.com",
  "password": "getrude123",
  "role": "student"
}

### Get profile by ID
GET {{url}}/profiles/1
Authorization: Bearer {{accessToken}}

### Get profile by name
GET {{url}}/profiles?firstName=John
Authorization: Bearer {{accessToken}}

### Update a profile
PATCH {{url}}/profiles/2
Content-Type: application/json
Authorization: Bearer {{accessToken}}

{
 "firstName": "John",
 "lastName": "Smith",
 "email": "smith@gmail.com",
  "password": "John1234"
}

### Delete a profile
DELETE {{url}}/profiles/1
Authorization: Bearer {{accessToken}}

#############################
###         ADMIN 
##############################

### Get all admins
GET {{url}}/admins
Authorization: Bearer {{accessToken}}

### create a new admin
POST {{url}}/admins
Content-Type: application/json
Authorization: Bearer {{accessToken}}

{
 "admin_id": 7,
 "username": "zk",
 "password": "zackl123",
 "email": "zack@gmail.com",
 "lastLogin": "2023-10-01T12:00:00Z",
 "isSuperAdmin": true
}

### Get admin by id
GET {{url}}/admins/1
Authorization: Bearer {{accessToken}}

### Get admin by username
GET {{url}}/admins?username=sam
Authorization: Bearer {{accessToken}}

### Update an admin
PATCH  {{url}}/admins/1
Content-Type: application/json
Authorization: Bearer {{accessToken}}

{
 "username": "Zack",
 "email": "za@gmail.com"
}
### Delete an admin
DELETE {{url}}/admins/4
Authorization: Bearer {{accessToken}}

################################
###        COURSES
################################

### Get all courses 
GET {{url}}/courses
Authorization: Bearer {{accessToken}}

### Create a new course
POST {{url}}/courses
Content-Type: application/json
Authorization: Bearer {{accessToken}}

{
  "courseName": "web development",    
 "courseCode": "CS102",
 "description": "A beginner's course  in tech.",
 "credits": 3,
 "status": "active",
 "createdAt": "2023-09-01T00:00:00Z",
 "updatedAt": "2023-09-01T00:00:00Z"
}

### Get course by ID
GET {{url}}/courses/1
Authorization: Bearer {{accessToken}}

### Get course by name
GET {{url}}/courses?courseName=Introduction%20to%20Programming
Authorization: Bearer {{accessToken}}

### Update a course
PATCH {{url}}/courses/1
Content-Type: application/json
Authorization: Bearer {{accessToken}}

{
 "courseName": "Advanced Programming",
 "credits": 4
}

### Delete a course
DELETE {{url}}/courses/1
Authorization: Bearer {{accessToken}}

###############################
###      REGISTRATIONS
###############################

### Get all registrations
GET {{url}}/registrations
Authorization: Bearer {{accessToken}}

### Create a new registration
POST {{url}}/registrations
Content-Type: application/json
Authorization: Bearer {{accessToken}}

{
 "id": "1",
 "courseId": "1",
 "sessionId": "2023-Fall",
 "subjectId": "CS101",
 "registrationDate": "2023-09-01",
 "status": "pending"
}

### Get registration by ID
GET {{url}}/registrations/1
Authorization: Bearer {{accessToken}}

### Get registration by course ID
GET {{url}}/registrations?courseId=1
Authorization: Bearer {{accessToken}}

### Update a registration
PATCH {{url}}/registrations/1
Content-Type: application/json
Authorization: Bearer {{accessToken}}

{
 "status": "approved"
}

### Delete a registration
DELETE {{url}}/registrations/1
Authorization: Bearer {{accessToken}}

##############################
###      SUBJECTS
##############################

### Get all subjects
GET {{url}}/subjects

### Create a new subject
POST {{url}}/subjects
Content-Type: application/json

{
 "subjectName": "Data Structures",
 "subjectCode": "CS102",
 "description": "An intermediate course in data structures.",
 "credits": 3,
 "department": "Computer Science",
 "semester": "Fall 2023"
}

### Get subject by ID
GET {{url}}/subjects/1

### Get subject by name
GET {{url}}/subjects?subjectName=Data%20Structures

### Update a subject
PATCH {{url}}/subjects/1
Content-Type: application/json

{
 "subjectName": "Advanced Data Structures",
 "credits": 4
}

### Delete a subject
DELETE {{url}}/subjects/1
###########################
###       SESSIONS
###########################

### Get all sessions
GET {{url}}/sessions

### Create a new session
POST {{url}}/sessions
Content-Type: application/json

{
 "sessionName": "2023 Fall",
 "startDate": "2023-09-01",
 "endDate": "2023-12-15",
 "status": "active"
}

### Get session by ID
GET {{url}}/sessions/1

### Get session by name
GET {{url}}/sessions?sessionName=2023%20Fall

### Update a session
PATCH {{url}}/sessions/1
Content-Type: application/json

{
 "endDate": "2023-12-20",
 "status": "completed"
}

### Delete a session
DELETE {{url}}/sessions/1

###########################
###       FEEDBACKS
###########################
### Get all feedbacks
GET {{url}}/feedbacks

### Create a new feedback
POST {{url}}/feedbacks
Content-Type: application/json

{
 "studentId": 1,
 "courseId": 1,
 "feedbackText": "Great course!",
 "rating": 5,
 "createdAt": "2023-09-01T00:00:00Z"
}

### Get feedback by ID
GET {{url}}/feedbacks/1

### Get feedback by student ID
GET {{url}}/feedbacks?studentId=1

### Get feedback by course ID
GET {{url}}/feedbacks?courseId=1

### Update a feedback
PATCH {{url}}/feedbacks/1
Content-Type: application/json

{
 "feedbackText": "Excellent course!",
 "rating": 4
}

### Delete a feedback
DELETE {{url}}/feedbacks/1

###########################
###       REPORTS
###########################

### Get all reports
GET {{url}}/reports

### Create a new report
POST {{url}}/reports
Content-Type: application/json

{
 "reportType": "student",
 "reportData": {
   "studentId": 1,
   "courseId": 1,
   "enrollmentDate": "2023-09-01",
   "status": "active"
 }
}

### Get report by ID
GET {{url}}/reports/1

### Get report by type
GET {{url}}/reports?reportType=student

### Update a report
PATCH {{url}}/reports/1
Content-Type: application/json

{
 "reportData": {
   "status": "completed"
 }
}

### Delete a report
DELETE {{url}}/reports/1

###########################
###       ADMIN LOGINS
###########################

### Get all admin logins
GET {{url}}/admin-logins

### Create a new admin login
POST {{url}}/admin-logins
Content-Type: application/json

{
 "adminId": 1,
 "loginTime": "2023-09-01T12:00:00Z",
 "logoutTime": "2023-09-01T14:00:00Z",
 "ipAddress": "44552456",
 "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3"
}

### Get admin login by ID
GET {{url}}/admin-logins/1

### Get admin login by admin ID
GET {{url}}/admin-logins?adminId=1

### Update an admin login
PATCH {{url}}/admin-logins/1
Content-Type: application/json

{
 "logoutTime": "2023-09-01T15:00:00Z"
}

### Delete an admin login
DELETE {{url}}/admin-logins/1






