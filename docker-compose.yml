# version: '3.8'

services:
  # students-records_db:
  #   image: postgres:15-alpine
  #   container_name: students-records_db
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: "@getrude123"
  #     POSTGRES_DB: students-records_db
  #     POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - pgdata:/var/lib/postgresql/data  
  #   networks:
  #     - app-network
  #    #   healthcheck:
  #    #   test: ["CMD-SHELL", "pg_isready -U postgres"]
  #    #   interval: 30s
  #    #   timeout: 10s
  #    #   retries: 5

  redis:
    image: redis:8.0-alpine
    container_name: redis-cache
    restart: unless-stopped
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    # healthcheck:
    #   test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
    #   interval: 30s
    #   timeout: 10s  
    #   retries: 5
  # nestjs-app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: students-records_db

  #   depends_on:
  #     students-records_db:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   ports:
  #     - "8000:8000"

  #   environment:
  #    REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/0
  #    DATABASE_URL: postgres://postgres:@getrude123@students-records_db:5432/students-records_db
  #    NODE_ENV: development
  #    PORT: 8000
  #    JWT_SECRET: ${JWT_SECRET}
  #    JWT_EXPIRATION: 1d
  #    JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
  #    JWT_REFRESH_EXPIRATION: 7d
  #    JWT_ISSUER: students-records
  #    JWT_AUDIENCE: students-records
  #    REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/0
  #    REDIS_CACHE_TTL: 3600
  #    REDIS_CACHE_PREFIX: students-records
  #    REDIS_CACHE_ENABLED: true
  #    REDIS_CACHE_HOST: redis
  #    REDIS_CACHE_PORT: 6379
  #    REDIS_CACHE_PASSWORD: ${REDIS_PASSWORD}
  #    REDIS_CACHE_DB: 0
  #    REDIS_CACHE_URL: redis://:${REDIS_PASSWORD}@redis:6379/0
  #    REDIS_CACHE_TTL: 3600


  #   env_file:
  #     - .env
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   networks:
  #     - app-network
  #   command: npm run dev 

volumes:
  # pgdata:
  #   name: students-records-management-pgdata
  #   driver: local
  redis-data:
    name: students-records-redis-cache-data
    driver: local

networks:
  app-network:
    driver: bridge