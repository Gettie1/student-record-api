version: '3.8'

services:
  # user-management-db:
  #   image: postgres:15-alpine
  #   container_name: students-records-db
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: "@getrude123"
  #     POSTGRES_DB: students-records_db
  #     POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - pgdata:/var/lib/postgresql/data  
  #   networks:
  #     - app-network

  redis:
    image: redis:8.0-alpine
    container_name: redis-cache
    restart: unless-stopped
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
  # app:
  #   build: .
  #   container_name: -db

  #   depends_on:
  #     - books-management-db
  #     - redis
  #   ports:
  #     - "3000:3000"

  #   environment:
  #     - NODE_ENV=development
  #     - REDIS_HOST=redis
  #     - REDIS_PORT=6379

  #   env_file:
  #     - .env
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   networks:
  #     - app-network
  #   command: npm run dev 

volumes:
  # pgdata:
  #   name: students-records_db
  #   driver: local
  redis-data:
    name: redis-cache-data
    driver: local

networks:
  app-network:
    driver: bridge